[{"C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\index.js":"1","C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\App.js":"2","C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\reportWebVitals.js":"3","C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\app\\store.js":"4","C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\components\\login.js":"5","C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\components\\dailyOrders\\dailyOrders.js":"6","C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\components\\dashboard.js":"7","C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\app\\features\\orders\\dailyOrdersslice.js":"8","C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\app\\features\\counter\\counterSlice.js":"9","C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\components\\dailyOrders\\dailyAcordeon.js":"10","C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\app\\features\\orders\\dailyOrdersAsyncthunk.js":"11","C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\forms\\partsForm.js":"12","C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\forms\\shippingForm.js":"13","C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\FunctionHelpers\\repackFunction.js":"14","C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\FunctionHelpers\\getParts.js":"15","C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\components\\dailyOrders\\popover.js":"16","C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\components\\dailyOrders\\tableDaily.js":"17","C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\components\\carrierDropdown.js":"18","C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\components\\progressModal.js":"19","C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\components\\progrssASNbar.js":"20","C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\components\\certificatesOfComplience\\certificatesOfComplience.js":"21","C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\app\\features\\certicatesOfComplience\\certificatesSlice.js":"22","C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\app\\features\\certicatesOfComplience\\certificatesAsyncThunk.js":"23","C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\app\\features\\Inventory\\inventorySlice.js":"24","C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\app\\features\\Inventory\\inventoryAsyncThunk.js":"25","C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\components\\InventoryComponent\\inventory.js":"26","C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\components\\LoginComponents\\LonginComponent.js":"27","C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\components\\menuComponent\\menu.js":"28"},{"size":768,"mtime":1709153560414,"results":"29","hashOfConfig":"30"},{"size":1109,"mtime":1714655160412,"results":"31","hashOfConfig":"30"},{"size":375,"mtime":1709153560414,"results":"32","hashOfConfig":"30"},{"size":521,"mtime":1711482009589,"results":"33","hashOfConfig":"30"},{"size":2749,"mtime":1714658651485,"results":"34","hashOfConfig":"30"},{"size":7345,"mtime":1714489467809,"results":"35","hashOfConfig":"30"},{"size":13975,"mtime":1715353041649,"results":"36","hashOfConfig":"30"},{"size":1235,"mtime":1713902133974,"results":"37","hashOfConfig":"30"},{"size":927,"mtime":1709153560408,"results":"38","hashOfConfig":"30"},{"size":2343,"mtime":1709153560408,"results":"39","hashOfConfig":"30"},{"size":1942,"mtime":1715351772651,"results":"40","hashOfConfig":"30"},{"size":2995,"mtime":1709761028658,"results":"41","hashOfConfig":"30"},{"size":5197,"mtime":1709831000915,"results":"42","hashOfConfig":"30"},{"size":565,"mtime":1709153560392,"results":"43","hashOfConfig":"30"},{"size":695,"mtime":1715352931061,"results":"44","hashOfConfig":"30"},{"size":1028,"mtime":1709153560408,"results":"45","hashOfConfig":"30"},{"size":2217,"mtime":1713817565089,"results":"46","hashOfConfig":"30"},{"size":6829,"mtime":1709153560408,"results":"47","hashOfConfig":"30"},{"size":1100,"mtime":1709236467894,"results":"48","hashOfConfig":"30"},{"size":235,"mtime":1709234782376,"results":"49","hashOfConfig":"30"},{"size":8257,"mtime":1709743516870,"results":"50","hashOfConfig":"30"},{"size":872,"mtime":1709688277092,"results":"51","hashOfConfig":"30"},{"size":703,"mtime":1715351661114,"results":"52","hashOfConfig":"30"},{"size":2081,"mtime":1711487570236,"results":"53","hashOfConfig":"30"},{"size":1420,"mtime":1715351644079,"results":"54","hashOfConfig":"30"},{"size":8933,"mtime":1714494979965,"results":"55","hashOfConfig":"30"},{"size":1271,"mtime":1714489517624,"results":"56","hashOfConfig":"30"},{"size":473,"mtime":1714496113969,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"5t25o",{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"61"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\index.js",[],[],[],"C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\App.js",[],[],"C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\reportWebVitals.js",[],[],"C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\app\\store.js",[],[],"C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\components\\login.js",[],[],"C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\components\\dailyOrders\\dailyOrders.js",[],[],"C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\components\\dashboard.js",["145","146","147","148","149","150","151","152"],[],"import { useState, useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport PartForm from \"../forms/partsForm\";\r\nimport ShippingForm from \"../forms/shippingForm\";\r\nimport Repack from \"../FunctionHelpers/repackFunction\";\r\nimport getParts from \"../FunctionHelpers/getParts\";\r\nimport ProgressCenteredModal from \"./progressModal\";\r\nimport LoginComponent from \"./LoginComponents/LonginComponent\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst socket = io(\"http://10.100.111.10:3010\");\r\nlet socketId; // Variable to store the socket.id\r\n\r\nsocket.on(\"connect\", () => {\r\n  socketId = socket.id;\r\n});\r\n\r\nconst Dashboard = ()=>{\r\n  const [progress, setProgress] = useState(0);\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n\r\n    //Shipping\r\n    const initialShippingValues= {\r\n        PackingSLipID: \"\",\r\n        ShippingDate: \"\",\r\n        DeliveryDate: \"\",\r\n        CarrierName: \"\",\r\n        TrackingNo: \"\",\r\n        PlantCode: \"\",\r\n        Customer: \"\",\r\n        ShipTo: \"\"\r\n    };\r\n    const [shipping, setShipping] = useState(initialShippingValues);\r\n    const [isPartsClicked, setIsPartsClicked] = useState(true);\r\n    const [isDuplicates, setIsDuplicates] = useState(false);\r\n\r\n    const handleShippingChange = (e) =>{\r\n        const { name, value }= e.target;\r\n        const generatedPackingSLipID = value.replace(/\\//g, ''); \r\n        if(name === 'ShippingDate'){\r\n          setShipping({ ...shipping, [name]: value, PackingSLipID: generatedPackingSLipID});\r\n        } else{\r\n          setShipping({ ...shipping, [name]: value});\r\n        }\r\n    }\r\n\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n      const isAuthenticated = document.cookie.split('; ').find(row => row.startsWith('username='));\r\n      if (!isAuthenticated) {\r\n          navigate('/');  // Redirects to the login page\r\n      }\r\n  }, [navigate]); \r\n\r\n    //Part\r\n    const initialPart = {\r\n        partNo: \"\",\r\n        quantity: \"\",\r\n        mixedOrMaster: \"Mixed\",\r\n        repackedQuantity: \"\",\r\n        isDuplicate: false,\r\n        customized:[]\r\n      };\r\n    \r\n      const [parts, setParts] = useState([initialPart]);\r\n    \r\n      const handleInputChange = (e, index) => {\r\n        const { name, value } = e.target;\r\n        const updatedParts = [...parts];\r\n        updatedParts[index][name] = value;\r\n    \r\n         // Automatically set the \"Repacked Quantity\" to the same value as \"Quantity\"\r\n         if (name === \"quantity\") {\r\n            updatedParts[index].repackedQuantity = value;\r\n          }\r\n\r\n         // Add a new row if the user is typing in the first field of the last row\r\n         if (index === updatedParts.length - 1 && name === \"partNo\" && value.trim() !== \"\") {\r\n            updatedParts.push({\r\n                partNo: \"\",\r\n                quantity: \"\",\r\n                mixedOrMaster: \"Mixed\",\r\n                repackedQuantity: \"\",\r\n                isDuplicate: false,\r\n                customized:[]\r\n              });\r\n          }\r\n    \r\n        setParts(updatedParts);\r\n      };\r\n    \r\n      const handleRemovePart = (index) => {\r\n        const updatedParts = [...parts];\r\n    \r\n        \r\n          updatedParts.splice(index, 1);\r\n        \r\n    \r\n        setParts(updatedParts);\r\n      };\r\n\r\n      //Packages\r\n      \r\n      const [editModes, setEditModes] = useState(new Array(parts.length).fill(false));\r\n\r\n      const handleEditPart = (index) => {\r\n        const newEditModes = [...editModes];\r\n        newEditModes[index] = !newEditModes[index];\r\n        setEditModes(newEditModes);\r\n      };\r\n      \r\n      // Function to handle changes in individual customized inputs\r\n      const handleEditCustomizedChange = (e, index, subIndex) => {\r\n        const { value } = e.target;\r\n\r\n      // Create a deep copy of the current parts state\r\n      const updatedParts = [...parts];\r\n\r\n      // Update the customized value for the specified part\r\n      updatedParts[index].customized[subIndex] = parseFloat(value);\r\n\r\n      // Set the updated parts state\r\n      setParts(updatedParts);\r\n      };\r\n\r\n      // Function to check if the edited values equal the total quantity\r\n      const handleCheckTotal = (index) => {\r\n        const part = parts[index];\r\n      \r\n        // Calculate the total quantity based on customized values\r\n        const totalQuantity = part.customized.reduce((acc, value) => acc + value, 0);\r\n\r\n        // Check if the total quantity matches the original quantity\r\n        if (totalQuantity === parseFloat(part.quantity)) {\r\n          // If they match, exit edit mode if needed\r\n          if (editModes[index]) {\r\n            handleEditPart(index); // Exit edit mode\r\n          }\r\n        } else {\r\n          // If they don't match, you can handle the error or display a message\r\n          alert(\"Total quantity does not match.\");\r\n        }\r\n      };\r\n      //Handle Repack\r\n      const handleRepack = () => {\r\n        const updatedParts = [...parts];\r\n        updatedParts.forEach((part, index) => {\r\n          if (part.quantity && part.repackedQuantity) {\r\n            updatedParts[index].customized = Repack(parseFloat(part.quantity), parseFloat(part.repackedQuantity));\r\n          } else {\r\n            updatedParts[index].customized = []; // Reset if either quantity or repackedQuantity is missing\r\n          }\r\n        });\r\n      \r\n        setParts(updatedParts);\r\n      };\r\n      \r\n      //SubmitASN\r\n      // State to store the response from the server\r\n  const [serverResponse, setServerResponse] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // Set up a listener for the 'progressUpdate' event from the server\r\n    socket.on(\"progressUpdate\", (data) => {\r\n      setProgress(data.progress);\r\n      setServerResponse(data.message);\r\n      setMessages((prevMessages) => [data.message, ...prevMessages]);\r\n      // Handle the progress update as needed\r\n    });\r\n\r\n    // Cleanup the socket listener on component unmount\r\n    return () => {\r\n      socket.off(\"progressUpdate\");\r\n    };\r\n  }, []);\r\n\r\n  const handleElectroluxAspRevise = async () => {\r\n    try {\r\n\r\n      const res = handleCheckDuplicate();\r\n\r\n      if(res){\r\n        alert(\"Duplicate parts\");\r\n      } else {\r\n      // Prepare the data to send to the server\r\n      const dataToSend = {\r\n        parts,\r\n        shipping,\r\n      };\r\n\r\n        // Send a POST request to the server\r\n      const response = await fetch(\"http://10.100.111.10:3010/resviseASPElectrolux\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(dataToSend),\r\n      });\r\n\r\n      // Check if the response is successful (you can modify the condition)\r\n      if (response.status === 200) {\r\n        const responseData = await response.json();\r\n        // Handle the response data as needed\r\n        setServerResponse(responseData.message);\r\n      } else {\r\n        // Handle error responses\r\n        setServerResponse(\"Error: Failed to submit data to the server\");\r\n      }\r\n      }\r\n      \r\n    } catch (error) {\r\n      // Handle any network or other errors\r\n      console.error(\"Error:\", error);\r\n      setServerResponse(\"Error: Something went wrong\");\r\n    }\r\n  };\r\n\r\n\r\n  const handleElectroluxAspSubmit = async () => {\r\n    try {\r\n\r\n      const res = handleCheckDuplicate();\r\n\r\n      if(res){\r\n        alert(\"Duplicate parts\");\r\n      } else {\r\n      // Prepare the data to send to the server\r\n      const dataToSend = {\r\n        parts,\r\n        shipping,\r\n      };\r\n\r\n        // Send a POST request to the server\r\n      const response = await fetch(\"http://10.100.111.10:3010/buildASPElectrolux\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(dataToSend),\r\n      });\r\n\r\n      // Check if the response is successful (you can modify the condition)\r\n      if (response.status === 200) {\r\n        const responseData = await response.json();\r\n        // Handle the response data as needed\r\n        setServerResponse(responseData.message);\r\n      } else {\r\n        // Handle error responses\r\n        setServerResponse(\"Error: Failed to submit data to the server\");\r\n      }\r\n      }\r\n\r\n      \r\n    } catch (error) {\r\n      // Handle any network or other errors\r\n      console.error(\"Error:\", error);\r\n      setServerResponse(\"Error: Something went wrong\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n\r\n    try {\r\n      const res = handleCheckDuplicate();\r\n\r\n      if(res){\r\n        alert(\"Duplicate parts\");\r\n      } else if(parts[0].customized.length === 0){\r\n        alert(\"Repack before submitting.\");\r\n      } else {\r\n        setModalShow(true);\r\n     \r\n      const dataToSend = {\r\n        parts,\r\n        shipping,\r\n        cookies: document.cookie,\r\n      };\r\n\r\n        const response = await fetch(\"http://10.100.111.10:3010/buildASN\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"socketId\": socketId,\r\n          },\r\n          body: JSON.stringify(dataToSend),\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          const responseData = await response.json();\r\n          console.log(responseData);\r\n          setServerResponse(responseData.message.message);\r\n        } else {\r\n          setServerResponse(\"Error: Failed to submit data to the server\");\r\n        }\r\n      }\r\n      \r\n      \r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      setServerResponse(\"Error: Something went wrong\");\r\n    }\r\n  };\r\n  \r\n\r\n  function getFormattedToday() {\r\n    const today = new Date();\r\n    const month = (today.getMonth() + 1).toString().padStart(2, '0');\r\n    const day = today.getDate().toString().padStart(2, '0');\r\n    const year = today.getFullYear().toString();\r\n  \r\n    return `${month}/${day}/${year.slice(2)}`;\r\n  }\r\n  \r\n\r\n  //get Parts\r\n  const handleGetParts = async () => {\r\n    try {\r\n      const orders = await getParts(shipping);\r\n\r\n      const transformedParts = orders.flatMap(order => {\r\n        const isMixed = order.Parts.length === 1;\r\n        const mixedOrMaster = isMixed ? \"Master\" : \"Mixed\";\r\n\r\n        return order.Parts.map(part => ({\r\n          partNo: part.CustomerPart,\r\n          quantity: part.PartQuantity,\r\n          mixedOrMaster,\r\n          repackedQuantity: part.PartQuantity,\r\n          isDuplicate: false,\r\n          customized: [],\r\n        }));\r\n      });\r\n\r\n      // Add an empty object to the transformedParts array\r\n      transformedParts.push({\r\n        partNo: \"\",\r\n        quantity: \"\",\r\n        mixedOrMaster: \"Mixed\",\r\n        repackedQuantity: \"\",\r\n        isDuplicate: false,\r\n        customized: [],\r\n      });\r\n\r\n      setParts(transformedParts);\r\n      setIsPartsClicked(true);\r\n    } catch (error) {\r\n      console.error('Error fetching parts:', error);\r\n      // Handle errors as needed\r\n    }\r\n  };\r\n\r\n  const handleCheckDuplicate = () => {\r\n    const partNos = new Set();\r\n    const duplicatePartNos = new Set();\r\n  \r\n    // Iterate through all parts to check for duplicates\r\n    parts.forEach((part) => {\r\n      const { partNo } = part;\r\n  \r\n      if (partNos.has(partNo)) {\r\n        duplicatePartNos.add(partNo);\r\n      } else {\r\n        partNos.add(partNo);\r\n      }\r\n    });\r\n  \r\n    // Update state to mark duplicates\r\n    const updatedParts = parts.map((part) => ({\r\n      ...part,\r\n      isDuplicate: duplicatePartNos.has(part.partNo),\r\n    }));\r\n\r\n    if (duplicatePartNos.size > 0) {\r\n      // Duplicates found\r\n      setIsDuplicates(true);\r\n    } else {\r\n      // No duplicates found\r\n      setIsDuplicates(false);\r\n    }\r\n  \r\n    // Update the state with the new information\r\n    setParts(updatedParts);\r\n\r\n    if (duplicatePartNos.size > 0) {\r\n      // Duplicates found\r\n      return true;\r\n    }  else {\r\n      return false\r\n    }\r\n  };\r\n  \r\n\r\n    return(\r\n        <div>\r\n           <div className=\"m-4 d-flex flex-row-reverse\"><LoginComponent /></div>\r\n            <ShippingForm \r\n            shipping ={shipping}\r\n            handleChange ={handleShippingChange}\r\n            handleGetParts={handleGetParts}\r\n            \r\n            today={getFormattedToday()}\r\n            />\r\n            <PartForm\r\n            handleInputChange={handleInputChange}\r\n            handleRemovePart={handleRemovePart}\r\n            parts={parts} \r\n            editModes={editModes}\r\n            handleEditCustomizedChange={handleEditCustomizedChange}\r\n            handleEditPart={handleEditPart}\r\n            handleCheckTotal={handleCheckTotal}\r\n            handleRepack={handleRepack}\r\n            isDuplicates={isDuplicates}\r\n            />\r\n          {shipping.Customer === '9675' && shipping.ShippingDate !== getFormattedToday() || shipping.Customer === '9676' && shipping.ShippingDate !== getFormattedToday() || shipping.Customer === '10105' && shipping.ShippingDate !== getFormattedToday() || shipping.Customer === '10053' &&\r\n  shipping.ShippingDate !== getFormattedToday() ?<button onClick={handleElectroluxAspSubmit} className=\"submit\" disabled={!isPartsClicked}>Submit ASP Electrolux</button>:shipping.Customer === '9675' || shipping.Customer === '9676' || shipping.Customer === '10105' || shipping.Customer === '10053'?\r\n  <button onClick={handleElectroluxAspRevise} className=\"submit\" disabled={!isPartsClicked}>Revise ASP Electrolux</button>: <button onClick={handleSubmit} className=\"submit\" disabled={!isPartsClicked}>Submit</button>}\r\n          \r\n          \r\n          <div className=\"m-2\">\r\n            {serverResponse && <p>Server Response: {serverResponse}</p>}\r\n          </div>\r\n\r\n      <ProgressCenteredModal \r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n        progress={progress}\r\n        serverResponse={serverResponse}\r\n        messages = {messages}\r\n      />\r\n          \r\n          {/* {progress && <p>Progress: {progress}</p> }\r\n          {message && <p>message: {message}</p>} */}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dashboard;","C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\app\\features\\orders\\dailyOrdersslice.js",[],[],"C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\app\\features\\counter\\counterSlice.js",[],[],"C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\components\\dailyOrders\\dailyAcordeon.js",[],[],"C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\app\\features\\orders\\dailyOrdersAsyncthunk.js",[],[],"C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\forms\\partsForm.js",[],[],"C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\forms\\shippingForm.js",["153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168"],[],"import Dropdown from \"../components/carrierDropdown\";\r\nimport \"./shippingForm.css\";\r\nconst ShippingForm =(props)=>{\r\n    const {PackingSLipID ,ShippingDate ,DeliveryDate ,CarrierName ,TrackingNo, PlantCode, Customer, ShipTo} = props.shipping;\r\n   \r\n    const formatDate = (date) => {\r\n        if (!date) return '';\r\n        const [year, month, day] = date.split('-');\r\n        return `${month}/${day}/${year.slice(2)}`;\r\n      };\r\n\r\n      const today = props.today;\r\n    return(\r\n        <div className=\"Form\">\r\n            <h2>Shipping Details</h2>\r\n            <div className=\"shippingForm\">\r\n                <div>\r\n                    <label htmlFor=\"ShippingDateInput\">Shipping Date</label>\r\n                    <input\r\n                        type=\"date\"\r\n                        value={ShippingDate}\r\n                        name=\"ShippingDate\"\r\n                        id=\"ShippingDateInput\"\r\n                        onChange={props.handleChange}\r\n                        onFocus={(e) => (e.target.type = 'date')}\r\n                        onBlur={(e) => {\r\n                            e.target.type = 'text';\r\n                            const formattedDate = formatDate(e.target.value);\r\n                            e.target.value = formattedDate;\r\n                            props.handleChange(e);\r\n                        }}\r\n                    />\r\n                    {Customer === '9675' && ShippingDate !== today || Customer === '9676' && ShippingDate !== today || Customer === '10105' && ShippingDate !== today || Customer === '10053' &&\r\n                    ShippingDate !== today || Customer !== '9675' ?\r\n                    <div>\r\n                        <label htmlFor=\"DeliveryDateInput\">Delivery Date</label>\r\n                        <input \r\n                        type=\"date\"\r\n                        value={DeliveryDate}\r\n                        name=\"DeliveryDate\"\r\n                        id=\"DeliveryDateInput\"\r\n                        onChange={props.handleChange}\r\n                        onFocus={(e) => (e.target.type = 'date')}\r\n                        onBlur={(e) => {\r\n                            e.target.type = 'text';\r\n                            const formattedDate = formatDate(e.target.value);\r\n                            e.target.value = formattedDate;\r\n                            props.handleChange(e);\r\n                        }}\r\n                        ></input>\r\n                    </div> : ''}\r\n                    {Customer === '9675' && ShippingDate === today || Customer === '9676' && ShippingDate === today || Customer === '10105' && ShippingDate === today || Customer === '10053' &&\r\n                    ShippingDate === today || Customer === '9600' || Customer === '3899' || Customer === '3896' || Customer === '3895' || Customer === '3894' || Customer === ''?\r\n                    <div>\r\n                    <label htmlFor=\"PackingSLipIDInput\">Packing Slip ID</label>\r\n                    <input \r\n                    value={PackingSLipID}\r\n                    name=\"PackingSLipID\"\r\n                    id=\"PackingSLipIDInput\"\r\n                    onChange={props.handleChange}\r\n                    ></input>\r\n                    </div> : ''}\r\n                    {Customer === '9675'|| Customer === '9676' || Customer === '10105'|| Customer === '10053'? '':\r\n                    <div>\r\n                    <label htmlFor=\"CarrierNameInput\">Carrier Name</label>\r\n                    <Dropdown \r\n                    value={CarrierName}\r\n                    name=\"CarrierName\"\r\n                    id='CarrierNameInput'\r\n                    onChange={props.handleChange} /> </div>}\r\n                </div>\r\n            <div>\r\n            {Customer === '9675'|| Customer === '9676' || Customer === '10105'|| Customer === '10053'?\r\n                '': <div>\r\n                <label htmlFor=\"TrackingNoInput\">Tracking No.</label>\r\n                    <input \r\n                    value={TrackingNo}\r\n                    name=\"TrackingNo\"\r\n                    id=\"TrackingNoInput\"\r\n                    onChange={props.handleChange}\r\n                    ></input>\r\n                    <label htmlFor=\"PlantCodeInput\">Plant Code</label>\r\n                    <input \r\n                    value={PlantCode}\r\n                    name=\"PlantCode\"\r\n                    id=\"PlantCodeInput\"\r\n                    onChange={props.handleChange}\r\n                    ></input> </div>}\r\n                    <label htmlFor=\"CustomerInput\">Customer</label>\r\n                    <input \r\n                    value={Customer}\r\n                    name=\"Customer\"\r\n                    id=\"CustomerInput\"\r\n                    onChange={props.handleChange}\r\n                    ></input>\r\n                    <label htmlFor=\"ShipToInput\">Ship To</label>\r\n                    <input \r\n                    value={ShipTo}\r\n                    name=\"ShipTo\"\r\n                    id=\"ShipToInput\"\r\n                    onChange={props.handleChange}\r\n                    ></input>\r\n            </div>\r\n            </div>\r\n            <button onClick={props.handleGetParts} className=\"getParts\">Get Parts</button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ShippingForm;","C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\FunctionHelpers\\repackFunction.js",[],[],"C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\FunctionHelpers\\getParts.js",[],[],"C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\components\\dailyOrders\\popover.js",[],[],"C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\components\\dailyOrders\\tableDaily.js",[],[],"C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\components\\carrierDropdown.js",[],[],"C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\components\\progressModal.js",[],[],"C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\components\\progrssASNbar.js",[],[],"C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\components\\certificatesOfComplience\\certificatesOfComplience.js",[],[],"C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\app\\features\\certicatesOfComplience\\certificatesSlice.js",[],[],"C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\app\\features\\certicatesOfComplience\\certificatesAsyncThunk.js",[],[],"C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\app\\features\\Inventory\\inventorySlice.js",[],[],"C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\app\\features\\Inventory\\inventoryAsyncThunk.js",[],[],"C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\components\\InventoryComponent\\inventory.js",[],[],"C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\components\\LoginComponents\\LonginComponent.js",[],[],"C:\\Users\\victor.yanez\\Projects\\Robot\\ASN\\front-end\\src\\components\\menuComponent\\menu.js",[],[],{"ruleId":"169","severity":1,"message":"170","line":415,"column":41,"nodeType":"171","messageId":"172","endLine":415,"endColumn":43},{"ruleId":"169","severity":1,"message":"170","line":415,"column":90,"nodeType":"171","messageId":"172","endLine":415,"endColumn":92},{"ruleId":"169","severity":1,"message":"173","line":415,"column":90,"nodeType":"171","messageId":"172","endLine":415,"endColumn":92},{"ruleId":"169","severity":1,"message":"173","line":415,"column":122,"nodeType":"171","messageId":"172","endLine":415,"endColumn":124},{"ruleId":"169","severity":1,"message":"173","line":415,"column":171,"nodeType":"171","messageId":"172","endLine":415,"endColumn":173},{"ruleId":"169","severity":1,"message":"173","line":415,"column":204,"nodeType":"171","messageId":"172","endLine":415,"endColumn":206},{"ruleId":"169","severity":1,"message":"173","line":415,"column":253,"nodeType":"171","messageId":"172","endLine":415,"endColumn":255},{"ruleId":"169","severity":1,"message":"173","line":415,"column":286,"nodeType":"171","messageId":"172","endLine":415,"endColumn":288},{"ruleId":"169","severity":1,"message":"170","line":33,"column":42,"nodeType":"171","messageId":"172","endLine":33,"endColumn":44},{"ruleId":"169","severity":1,"message":"170","line":33,"column":68,"nodeType":"171","messageId":"172","endLine":33,"endColumn":70},{"ruleId":"169","severity":1,"message":"173","line":33,"column":68,"nodeType":"171","messageId":"172","endLine":33,"endColumn":70},{"ruleId":"169","severity":1,"message":"173","line":33,"column":91,"nodeType":"171","messageId":"172","endLine":33,"endColumn":93},{"ruleId":"169","severity":1,"message":"173","line":33,"column":117,"nodeType":"171","messageId":"172","endLine":33,"endColumn":119},{"ruleId":"169","severity":1,"message":"173","line":33,"column":141,"nodeType":"171","messageId":"172","endLine":33,"endColumn":143},{"ruleId":"169","severity":1,"message":"173","line":33,"column":167,"nodeType":"171","messageId":"172","endLine":33,"endColumn":169},{"ruleId":"169","severity":1,"message":"173","line":33,"column":191,"nodeType":"171","messageId":"172","endLine":33,"endColumn":193},{"ruleId":"169","severity":1,"message":"170","line":52,"column":42,"nodeType":"171","messageId":"172","endLine":52,"endColumn":44},{"ruleId":"169","severity":1,"message":"170","line":52,"column":68,"nodeType":"171","messageId":"172","endLine":52,"endColumn":70},{"ruleId":"169","severity":1,"message":"173","line":52,"column":68,"nodeType":"171","messageId":"172","endLine":52,"endColumn":70},{"ruleId":"169","severity":1,"message":"173","line":52,"column":91,"nodeType":"171","messageId":"172","endLine":52,"endColumn":93},{"ruleId":"169","severity":1,"message":"173","line":52,"column":117,"nodeType":"171","messageId":"172","endLine":52,"endColumn":119},{"ruleId":"169","severity":1,"message":"173","line":52,"column":141,"nodeType":"171","messageId":"172","endLine":52,"endColumn":143},{"ruleId":"169","severity":1,"message":"173","line":52,"column":167,"nodeType":"171","messageId":"172","endLine":52,"endColumn":169},{"ruleId":"169","severity":1,"message":"173","line":52,"column":191,"nodeType":"171","messageId":"172","endLine":52,"endColumn":193},"no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations."]