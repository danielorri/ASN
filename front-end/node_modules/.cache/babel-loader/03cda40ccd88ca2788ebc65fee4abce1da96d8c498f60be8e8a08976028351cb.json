{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yanez\\\\Projects\\\\ASNProject\\\\front-end\\\\src\\\\forms\\\\partsForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PartForm = () => {\n  _s();\n  const initialPart = {\n    partNo: \"\",\n    quantity: \"\",\n    mixedOrMaster: \"Mixed\",\n    repackedQuantity: \"\"\n  };\n  const [parts, setParts] = useState([initialPart]);\n  const handleInputChange = (e, index) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const updatedParts = [...parts];\n    updatedParts[index][name] = value;\n\n    // Add a new row if the user is editing the last row and all fields are filled\n    if (index === updatedParts.length - 1 && Object.values(updatedParts[index]).every(Boolean)) {\n      updatedParts.push(initialPart);\n    }\n    setParts(updatedParts);\n  };\n  const handleRemovePart = index => {\n    const updatedParts = [...parts];\n\n    // Remove the row if the user clears the \"Part No.\" field\n    if (!updatedParts[index].partNo) {\n      updatedParts.splice(index, 1);\n    }\n    setParts(updatedParts);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Part Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Part No.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Mixed or Master\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Repacked Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: parts.map((part, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"partNo\",\n              value: part.partNo,\n              onChange: e => handleInputChange(e, index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"quantity\",\n              value: part.quantity,\n              onChange: e => handleInputChange(e, index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"mixedOrMaster\",\n              value: part.mixedOrMaster,\n              onChange: e => handleInputChange(e, index),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Mixed\",\n                children: \"Mixed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Master\",\n                children: \"Master\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"repackedQuantity\",\n              value: part.repackedQuantity,\n              onChange: e => handleInputChange(e, index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRemovePart(index),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(PartForm, \"TUCwH89cCfYqJEV0mMyC7QDMz9Y=\");\n_c = PartForm;\nexport default PartForm;\nvar _c;\n$RefreshReg$(_c, \"PartForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PartForm","_s","initialPart","partNo","quantity","mixedOrMaster","repackedQuantity","parts","setParts","handleInputChange","e","index","name","value","target","updatedParts","length","Object","values","every","Boolean","push","handleRemovePart","splice","children","fileName","_jsxFileName","lineNumber","columnNumber","map","part","type","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/yanez/Projects/ASNProject/front-end/src/forms/partsForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst PartForm = () => {\r\n  const initialPart = {\r\n    partNo: \"\",\r\n    quantity: \"\",\r\n    mixedOrMaster: \"Mixed\",\r\n    repackedQuantity: \"\",\r\n  };\r\n\r\n  const [parts, setParts] = useState([initialPart]);\r\n\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const updatedParts = [...parts];\r\n    updatedParts[index][name] = value;\r\n\r\n    // Add a new row if the user is editing the last row and all fields are filled\r\n    if (index === updatedParts.length - 1 && Object.values(updatedParts[index]).every(Boolean)) {\r\n      updatedParts.push(initialPart);\r\n    }\r\n\r\n    setParts(updatedParts);\r\n  };\r\n\r\n  const handleRemovePart = (index) => {\r\n    const updatedParts = [...parts];\r\n\r\n    // Remove the row if the user clears the \"Part No.\" field\r\n    if (!updatedParts[index].partNo) {\r\n      updatedParts.splice(index, 1);\r\n    }\r\n\r\n    setParts(updatedParts);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Part Form</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Part No.</th>\r\n            <th>Quantity</th>\r\n            <th>Mixed or Master</th>\r\n            <th>Repacked Quantity</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {parts.map((part, index) => (\r\n            <tr key={index}>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"partNo\"\r\n                  value={part.partNo}\r\n                  onChange={(e) => handleInputChange(e, index)}\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"quantity\"\r\n                  value={part.quantity}\r\n                  onChange={(e) => handleInputChange(e, index)}\r\n                />\r\n              </td>\r\n              <td>\r\n              <select\r\n                  name=\"mixedOrMaster\"\r\n                  value={part.mixedOrMaster}\r\n                  onChange={(e) => handleInputChange(e, index)}\r\n                >\r\n                  <option value=\"Mixed\">Mixed</option>\r\n                  <option value=\"Master\">Master</option>\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"repackedQuantity\"\r\n                  value={part.repackedQuantity}\r\n                  onChange={(e) => handleInputChange(e, index)}\r\n                />\r\n              </td>\r\n              <td>\r\n                <button onClick={() => handleRemovePart(index)}>Remove</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PartForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}