{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { fetchCertificates } from './certificatesAsyncThunk';\n\n// Create a slice for the dailyOrders state\nconst certificatesSlice = createSlice({\n  name: 'dailyOrders',\n  initialState: {\n    data: null,\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchCertificates.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchCertificates.fulfilled, (state, action) => {\n      state.loading = false;\n      state.data = action.payload;\n    }).addCase(fetchCertificates.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n    });\n  }\n});\n\n// Export the reducer\nexport default certificatesSlice.reducer;","map":{"version":3,"names":["createSlice","fetchCertificates","certificatesSlice","name","initialState","data","loading","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["C:/Users/victor.yanez/Projects/Robot/ASN/front-end/src/app/features/certicatesOfComplience/certificatesSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { fetchCertificates } from './certificatesAsyncThunk';\r\n\r\n// Create a slice for the dailyOrders state\r\nconst certificatesSlice = createSlice({\r\n  name: 'dailyOrders',\r\n  initialState: {\r\n    data: null,\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchCertificates.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchCertificates.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.data = action.payload;\r\n      })\r\n      .addCase(fetchCertificates.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      });\r\n  },\r\n});\r\n\r\n// Export the reducer\r\nexport default certificatesSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,iBAAiB,QAAQ,0BAA0B;;AAE5D;AACA,MAAMC,iBAAiB,GAAGF,WAAW,CAAC;EACpCG,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAE;IACZC,IAAI,EAAE,IAAI;IACVC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACV,iBAAiB,CAACW,OAAO,EAAGC,KAAK,IAAK;MAC7CA,KAAK,CAACP,OAAO,GAAG,IAAI;MACpBO,KAAK,CAACN,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDI,OAAO,CAACV,iBAAiB,CAACa,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACvDF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACR,IAAI,GAAGU,MAAM,CAACC,OAAO;IAC7B,CAAC,CAAC,CACDL,OAAO,CAACV,iBAAiB,CAACgB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACtDF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACR,KAAK,CAACW,OAAO;IACpC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;;AAEF;AACA,eAAehB,iBAAiB,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}