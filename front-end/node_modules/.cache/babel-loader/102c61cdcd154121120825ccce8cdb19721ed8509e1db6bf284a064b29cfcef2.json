{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victor.yanez\\\\Projects\\\\ASN\\\\front-end\\\\src\\\\components\\\\dailyOrders\\\\dailyOrders.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchDailyOrders } from '../../app/features/orders/dailyOrdersAsyncthunk';\nimport AlwaysOpenAcordeon from './dailyAcordeon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DailyOrders = () => {\n  _s();\n  const dispatch = useDispatch();\n  const orders = useSelector(state => state.dailyOrders.data);\n  const status = useSelector(state => state.dailyOrders.status);\n  const error = useSelector(state => state.dailyOrders.error);\n  const [selectedDate, setSelectedDate] = useState(getTodayDate());\n  useEffect(() => {\n    // Dispatch the fetchDailyOrders action with the selected date\n    dispatch(fetchDailyOrders(selectedDate));\n  }, [dispatch, selectedDate]);\n\n  // Function to get today's date in the format 'YYYY-MM-DD'\n  function getTodayDate() {\n    const today = new Date();\n    const year = today.getFullYear();\n    const month = String(today.getMonth() + 1).padStart(2, '0');\n    const day = String(today.getDate()).padStart(2, '0');\n    return `${year}-${month}-${day}`;\n  }\n\n  // Handle date change\n  const handleDateChange = event => {\n    setSelectedDate(event.target.value);\n  };\n\n  // Render loading state\n  if (status === 'loading') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render error state\n  if (status === 'failed') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  const groupedOrders = {};\n  if (orders) {\n    orders.forEach(order => {\n      const key = `${order.CardCode}-${order.ShipToCode}-${order.U_SIF_PO_Sample || 'N'}`;\n      if (!groupedOrders[key]) {\n        groupedOrders[key] = [];\n      }\n      groupedOrders[key].push(order);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center m-3\",\n      children: \"Daily Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"datePicker\",\n        children: \"Select Date: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"datePicker\",\n        value: selectedDate,\n        onChange: handleDateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), orders && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.keys(groupedOrders).map(groupKey => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '90%',\n          margin: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(AlwaysOpenAcordeon, {\n          groupedOrders: groupedOrders[groupKey]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)\n      }, groupKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(DailyOrders, \"w5NuufMiRkgBTfLlxClzaTGqR9w=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = DailyOrders;\nexport default DailyOrders;\nvar _c;\n$RefreshReg$(_c, \"DailyOrders\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","fetchDailyOrders","AlwaysOpenAcordeon","jsxDEV","_jsxDEV","DailyOrders","_s","dispatch","orders","state","dailyOrders","data","status","error","selectedDate","setSelectedDate","getTodayDate","today","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","handleDateChange","event","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","groupedOrders","forEach","order","key","CardCode","ShipToCode","U_SIF_PO_Sample","push","className","htmlFor","type","id","onChange","Object","keys","map","groupKey","style","width","margin","_c","$RefreshReg$"],"sources":["C:/Users/victor.yanez/Projects/ASN/front-end/src/components/dailyOrders/dailyOrders.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchDailyOrders } from '../../app/features/orders/dailyOrdersAsyncthunk';\r\nimport AlwaysOpenAcordeon from './dailyAcordeon';\r\n\r\nconst DailyOrders = () => {\r\n  const dispatch = useDispatch();\r\n  const orders = useSelector((state) => state.dailyOrders.data);\r\n  const status = useSelector((state) => state.dailyOrders.status);\r\n  const error = useSelector((state) => state.dailyOrders.error);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(getTodayDate());\r\n\r\n  useEffect(() => {\r\n    // Dispatch the fetchDailyOrders action with the selected date\r\n    dispatch(fetchDailyOrders(selectedDate));\r\n  }, [dispatch, selectedDate]);\r\n\r\n  // Function to get today's date in the format 'YYYY-MM-DD'\r\n  function getTodayDate() {\r\n    const today = new Date();\r\n    const year = today.getFullYear();\r\n    const month = String(today.getMonth() + 1).padStart(2, '0');\r\n    const day = String(today.getDate()).padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n  }\r\n\r\n  // Handle date change\r\n  const handleDateChange = (event) => {\r\n    setSelectedDate(event.target.value);\r\n  };\r\n\r\n  // Render loading state\r\n  if (status === 'loading') {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  // Render error state\r\n  if (status === 'failed') {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  const groupedOrders = {};\r\n  if (orders) {\r\n    orders.forEach((order) => {\r\n      const key = `${order.CardCode}-${order.ShipToCode}-${order.U_SIF_PO_Sample || 'N'}`;\r\n      if (!groupedOrders[key]) {\r\n        groupedOrders[key] = [];\r\n      }\r\n      groupedOrders[key].push(order);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 className='text-center m-3'>Daily Orders</h1>\r\n\r\n      {/* Date Picker */}\r\n      <div className=\"text-center mb-3\">\r\n        <label htmlFor=\"datePicker\">Select Date: </label>\r\n        <input\r\n          type=\"date\"\r\n          id=\"datePicker\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n        />\r\n      </div>\r\n\r\n      {orders && (\r\n        <div>\r\n          {Object.keys(groupedOrders).map((groupKey) => (\r\n            <div key={groupKey} style={{ width: '90%', margin: 'auto' }}>\r\n              <AlwaysOpenAcordeon groupedOrders={groupedOrders[groupKey]} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DailyOrders;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}