{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victor.yanez\\\\Projects\\\\Robot\\\\ASN\\\\front-end\\\\src\\\\components\\\\pdfHandler\\\\pdfHandler.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PdfHandler() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [pdfUrl, setPdfUrl] = useState(null);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleConvertPdf = () => {\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      fetch('http://10.100.110.185:3010/pdfhelper/convert-pdf', {\n        method: 'POST',\n        body: formData\n      }).then(response => response.blob()).then(blob => {\n        // Create a URL for the blob\n        const url = window.URL.createObjectURL(blob);\n        setPdfUrl(url);\n        // Optionally, trigger a download\n        // const a = document.createElement('a');\n        // a.href = url;\n        // a.download = 'converted.pdf';\n        // document.body.appendChild(a);\n        // a.click();\n        // window.URL.revokeObjectURL(url);\n        // a.remove();\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    }\n  };\n  const handleSplitPdf = () => {\n    // Similar implementation for splitting PDF\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConvertPdf,\n      children: \"Convert PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSplitPdf,\n      children: \"Split PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), pdfUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Converted PDF:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: pdfUrl,\n        width: \"100%\",\n        height: \"500px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(PdfHandler, \"OdjvwHZGIelBLAdknZwZNppTx8U=\");\n_c = PdfHandler;\nexport default PdfHandler;\nvar _c;\n$RefreshReg$(_c, \"PdfHandler\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PdfHandler","_s","selectedFile","setSelectedFile","pdfUrl","setPdfUrl","handleFileChange","event","target","files","handleConvertPdf","formData","FormData","append","fetch","method","body","then","response","blob","url","window","URL","createObjectURL","catch","error","console","handleSplitPdf","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","width","height","_c","$RefreshReg$"],"sources":["C:/Users/victor.yanez/Projects/Robot/ASN/front-end/src/components/pdfHandler/pdfHandler.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction PdfHandler() {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [pdfUrl, setPdfUrl] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleConvertPdf = () => {\r\n    if (selectedFile) {\r\n      const formData = new FormData();\r\n      formData.append('file', selectedFile);\r\n      fetch('http://10.100.110.185:3010/pdfhelper/convert-pdf', {\r\n        method: 'POST',\r\n        body: formData,\r\n      })\r\n      .then(response => response.blob())\r\n      .then(blob => {\r\n        // Create a URL for the blob\r\n        const url = window.URL.createObjectURL(blob);\r\n        setPdfUrl(url);\r\n        // Optionally, trigger a download\r\n        // const a = document.createElement('a');\r\n        // a.href = url;\r\n        // a.download = 'converted.pdf';\r\n        // document.body.appendChild(a);\r\n        // a.click();\r\n        // window.URL.revokeObjectURL(url);\r\n        // a.remove();\r\n      })\r\n      .catch(error => {\r\n        console.error('Error:', error);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSplitPdf = () => {\r\n    // Similar implementation for splitting PDF\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button onClick={handleConvertPdf}>Convert PDF</button>\r\n      <button onClick={handleSplitPdf}>Split PDF</button>\r\n      {pdfUrl && (\r\n        <div>\r\n          <h3>Converted PDF:</h3>\r\n          <iframe src={pdfUrl} width=\"100%\" height=\"500px\"></iframe>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PdfHandler;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMS,gBAAgB,GAAIC,KAAK,IAAK;IAClCJ,eAAe,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIR,YAAY,EAAE;MAChB,MAAMS,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEX,YAAY,CAAC;MACrCY,KAAK,CAAC,kDAAkD,EAAE;QACxDC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEL;MACR,CAAC,CAAC,CACDM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACE,IAAI,IAAI;QACZ;QACA,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;QAC5Cd,SAAS,CAACe,GAAG,CAAC;QACd;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACF,CAAC,CAAC,CACDI,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAME,cAAc,GAAGA,CAAA,KAAM;IAC3B;EAAA,CACD;EAED,oBACE5B,OAAA;IAAA6B,QAAA,gBACE7B,OAAA;MAAO8B,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAExB;IAAiB;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjDnC,OAAA;MAAQoC,OAAO,EAAEzB,gBAAiB;MAAAkB,QAAA,EAAC;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvDnC,OAAA;MAAQoC,OAAO,EAAER,cAAe;MAAAC,QAAA,EAAC;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAClD9B,MAAM,iBACLL,OAAA;MAAA6B,QAAA,gBACE7B,OAAA;QAAA6B,QAAA,EAAI;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBnC,OAAA;QAAQqC,GAAG,EAAEhC,MAAO;QAACiC,KAAK,EAAC,MAAM;QAACC,MAAM,EAAC;MAAO;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACjC,EAAA,CArDQD,UAAU;AAAAuC,EAAA,GAAVvC,UAAU;AAuDnB,eAAeA,UAAU;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}