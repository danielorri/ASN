{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victor.yanez\\\\Projects\\\\ASN\\\\front-end\\\\src\\\\components\\\\dailyOrders\\\\dailyOrders.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchDailyOrders } from '../../app/features/orders/dailyOrdersAsyncthunk';\nimport AlwaysOpenAcordeon from './dailyAcordeon';\nimport { setEditableOrder } from '../../app/features/orders/dailyOrdersslice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DailyOrders = () => {\n  _s();\n  const dispatch = useDispatch();\n  const orders = useSelector(state => state.dailyOrders.data);\n  const status = useSelector(state => state.dailyOrders.status);\n  const error = useSelector(state => state.dailyOrders.error);\n  const editableOrders = useSelector(state => state.dailyOrders.editableOrders);\n  const handleEditableChange = (key, value) => {\n    dispatch(setEditableOrder({\n      key,\n      value\n    }));\n  };\n  const [selectedDate, setSelectedDate] = useState(getTodayDate());\n  useEffect(() => {\n    // Dispatch the fetchDailyOrders action with the selected date\n    dispatch(fetchDailyOrders(selectedDate));\n  }, [dispatch, selectedDate]);\n\n  // Function to get today's date in the format 'YYYY-MM-DD'\n  function getTodayDate() {\n    const today = new Date();\n    const year = today.getFullYear();\n    const month = String(today.getMonth() + 1).padStart(2, '0');\n    const day = String(today.getDate()).padStart(2, '0');\n    return `${year}/${month}/${day}`;\n  }\n\n  // Handle date change\n  const handleDateChange = event => {\n    setSelectedDate(event.target.value);\n  };\n\n  // Render loading state\n  if (status === 'loading') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render error state\n  if (status === 'failed') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n  const groupedOrders = {};\n  if (orders) {\n    console.log(orders);\n    orders.forEach(order => {\n      const key = `${order.CardCode}-${order.ShipToCode}-${order.U_SIF_PO_Sample || 'N'}`;\n      if (!groupedOrders[key]) {\n        groupedOrders[key] = [];\n      }\n      groupedOrders[key].push(order);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-around\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center m-3\",\n        children: \"Daily Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"datePicker\",\n          className: \"me-2 fw-bold\",\n          children: \"Date: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"datePicker\",\n          value: selectedDate,\n          onChange: handleDateChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), orders && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.keys(groupedOrders).map(groupKey => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '90%',\n          margin: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(AlwaysOpenAcordeon, {\n          onEditableChange: handleEditableChange,\n          groupedOrders: groupedOrders[groupKey]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)\n      }, groupKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(DailyOrders, \"ZrMzkwi6Rf5j91+jEoRxPxIZpxk=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n_c = DailyOrders;\nexport default DailyOrders;\nvar _c;\n$RefreshReg$(_c, \"DailyOrders\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","fetchDailyOrders","AlwaysOpenAcordeon","setEditableOrder","jsxDEV","_jsxDEV","DailyOrders","_s","dispatch","orders","state","dailyOrders","data","status","error","editableOrders","handleEditableChange","key","value","selectedDate","setSelectedDate","getTodayDate","today","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","handleDateChange","event","target","children","fileName","_jsxFileName","lineNumber","columnNumber","groupedOrders","console","log","forEach","order","CardCode","ShipToCode","U_SIF_PO_Sample","push","className","htmlFor","type","id","onChange","Object","keys","map","groupKey","style","width","margin","onEditableChange","_c","$RefreshReg$"],"sources":["C:/Users/victor.yanez/Projects/ASN/front-end/src/components/dailyOrders/dailyOrders.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchDailyOrders } from '../../app/features/orders/dailyOrdersAsyncthunk';\r\nimport AlwaysOpenAcordeon from './dailyAcordeon';\r\nimport { setEditableOrder } from '../../app/features/orders/dailyOrdersslice';\r\n\r\nconst DailyOrders = () => {\r\n  const dispatch = useDispatch();\r\n  const orders = useSelector((state) => state.dailyOrders.data);\r\n  const status = useSelector((state) => state.dailyOrders.status);\r\n  const error = useSelector((state) => state.dailyOrders.error);\r\n  const editableOrders = useSelector((state) => state.dailyOrders.editableOrders);\r\n\r\n  const handleEditableChange = (key, value) => {\r\n    dispatch(setEditableOrder({ key, value }));\r\n  };\r\n\r\n  const [selectedDate, setSelectedDate] = useState(getTodayDate());\r\n\r\n  useEffect(() => {\r\n    // Dispatch the fetchDailyOrders action with the selected date\r\n    dispatch(fetchDailyOrders(selectedDate));\r\n  }, [dispatch, selectedDate]);\r\n\r\n  // Function to get today's date in the format 'YYYY-MM-DD'\r\n  function getTodayDate() {\r\n    const today = new Date();\r\n    const year = today.getFullYear();\r\n    const month = String(today.getMonth() + 1).padStart(2, '0');\r\n    const day = String(today.getDate()).padStart(2, '0');\r\n    return `${year}/${month}/${day}`;\r\n  }\r\n\r\n  // Handle date change\r\n  const handleDateChange = (event) => {\r\n    setSelectedDate(event.target.value);\r\n  };\r\n\r\n  // Render loading state\r\n  if (status === 'loading') {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  // Render error state\r\n  if (status === 'failed') {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  const groupedOrders = {};\r\n  if (orders) {\r\n    console.log(orders);\r\n    orders.forEach((order) => {\r\n      const key = `${order.CardCode}-${order.ShipToCode}-${order.U_SIF_PO_Sample || 'N'}`;\r\n      if (!groupedOrders[key]) {\r\n        groupedOrders[key] = [];\r\n      }\r\n      groupedOrders[key].push(order);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <div className='d-flex justify-content-around'>\r\n            <h1 className='text-center m-3'>Daily Orders</h1>\r\n\r\n            {/* Date Picker */}\r\n            <div className=\"text-center mb-3\">\r\n            <label htmlFor=\"datePicker\" className='me-2 fw-bold'>Date: </label>\r\n            <input\r\n                type=\"date\"\r\n                id=\"datePicker\"\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n            />\r\n            </div>\r\n        </div>\r\n\r\n      {orders && (\r\n        <div>\r\n          {Object.keys(groupedOrders).map((groupKey) => (\r\n            <div key={groupKey} style={{ width: '90%', margin: 'auto' }}>\r\n              <AlwaysOpenAcordeon onEditableChange={handleEditableChange} groupedOrders={groupedOrders[groupKey]} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DailyOrders;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}