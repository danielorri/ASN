{"ast":null,"code":"// dailyOrdersSlice.js\n\nimport { createSlice } from '@reduxjs/toolkit';\nimport { fetchDailyOrders } from './dailyOrdersAsyncthunk';\nconst dailyOrdersSlice = createSlice({\n  name: 'dailyOrders',\n  initialState: {\n    data: null,\n    status: 'idle',\n    error: null\n  },\n  reducers: {\n    // Add other reducers if needed\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchDailyOrders.pending, state => {\n      state.status = 'loading';\n    });\n    builder.addCase(fetchDailyOrders.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.data = action.payload;\n    });\n    builder.addCase(fetchDailyOrders.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n    // Add a new case for handling editable fields\n    builder.addCase(setEditableOrder, (state, action) => {\n      const {\n        key,\n        field,\n        value\n      } = action.payload;\n      const orderIndex = state.data.findIndex(order => order.key === key);\n      if (orderIndex !== -1) {\n        // Use immer to update the nested field in a mutable way\n        state.data[orderIndex][field] = value;\n      }\n    });\n  }\n});\n\n// export const { setEditableOrder, resetEditableOrders } = dailyOrdersSlice.actions;\n\nexport default dailyOrdersSlice.reducer;","map":{"version":3,"names":["createSlice","fetchDailyOrders","dailyOrdersSlice","name","initialState","data","status","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","setEditableOrder","key","field","value","orderIndex","findIndex","order","reducer"],"sources":["C:/Users/victor.yanez/Projects/ASN/front-end/src/app/features/orders/dailyOrdersslice.js"],"sourcesContent":["// dailyOrdersSlice.js\r\n\r\nimport { createSlice } from '@reduxjs/toolkit';\r\nimport { fetchDailyOrders } from './dailyOrdersAsyncthunk';\r\n\r\nconst dailyOrdersSlice = createSlice({\r\n  name: 'dailyOrders',\r\n  initialState: {\r\n    data: null,\r\n    status: 'idle',\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    // Add other reducers if needed\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchDailyOrders.pending, (state) => {\r\n      state.status = 'loading';\r\n    });\r\n    builder.addCase(fetchDailyOrders.fulfilled, (state, action) => {\r\n      state.status = 'succeeded';\r\n      state.data = action.payload;\r\n    });\r\n    builder.addCase(fetchDailyOrders.rejected, (state, action) => {\r\n      state.status = 'failed';\r\n      state.error = action.error.message;\r\n    });\r\n    // Add a new case for handling editable fields\r\n    builder.addCase(setEditableOrder, (state, action) => {\r\n      const { key, field, value } = action.payload;\r\n      const orderIndex = state.data.findIndex((order) => order.key === key);\r\n\r\n      if (orderIndex !== -1) {\r\n        // Use immer to update the nested field in a mutable way\r\n        state.data[orderIndex][field] = value;\r\n      }\r\n    });\r\n  },\r\n});\r\n\r\n// export const { setEditableOrder, resetEditableOrders } = dailyOrdersSlice.actions;\r\n\r\nexport default dailyOrdersSlice.reducer;\r\n"],"mappings":"AAAA;;AAEA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,gBAAgB,QAAQ,yBAAyB;AAE1D,MAAMC,gBAAgB,GAAGF,WAAW,CAAC;EACnCG,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAE;IACZC,IAAI,EAAE,IAAI;IACVC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACR;EAAA,CACD;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACV,gBAAgB,CAACW,OAAO,EAAGC,KAAK,IAAK;MACnDA,KAAK,CAACP,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC;IACFI,OAAO,CAACC,OAAO,CAACV,gBAAgB,CAACa,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC7DF,KAAK,CAACP,MAAM,GAAG,WAAW;MAC1BO,KAAK,CAACR,IAAI,GAAGU,MAAM,CAACC,OAAO;IAC7B,CAAC,CAAC;IACFN,OAAO,CAACC,OAAO,CAACV,gBAAgB,CAACgB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC5DF,KAAK,CAACP,MAAM,GAAG,QAAQ;MACvBO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACR,KAAK,CAACW,OAAO;IACpC,CAAC,CAAC;IACF;IACAR,OAAO,CAACC,OAAO,CAACQ,gBAAgB,EAAE,CAACN,KAAK,EAAEE,MAAM,KAAK;MACnD,MAAM;QAAEK,GAAG;QAAEC,KAAK;QAAEC;MAAM,CAAC,GAAGP,MAAM,CAACC,OAAO;MAC5C,MAAMO,UAAU,GAAGV,KAAK,CAACR,IAAI,CAACmB,SAAS,CAAEC,KAAK,IAAKA,KAAK,CAACL,GAAG,KAAKA,GAAG,CAAC;MAErE,IAAIG,UAAU,KAAK,CAAC,CAAC,EAAE;QACrB;QACAV,KAAK,CAACR,IAAI,CAACkB,UAAU,CAAC,CAACF,KAAK,CAAC,GAAGC,KAAK;MACvC;IACF,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AAEF;;AAEA,eAAepB,gBAAgB,CAACwB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}