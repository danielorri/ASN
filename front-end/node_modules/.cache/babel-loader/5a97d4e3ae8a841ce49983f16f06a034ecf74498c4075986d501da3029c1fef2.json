{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nexport const fetchDailyOrders = createAsyncThunk('dailyOrders/fetchData', async () => {\n  const response = await fetch('http://localhost:3010/dailyorders');\n  const data = await response.json();\n  return data;\n});\nexport const dailyOrdersSlice = createSlice({\n  name: 'dailyOrders',\n  initialState: {\n    data: 0,\n    // This can be an array or an object depending on your API response structure\n    status: 'idle',\n    // 'idle', 'loading', 'succeeded', 'failed'\n    error: null\n  },\n  reducers: {\n    // You can add additional reducers here if needed\n  },\n  extraReducers: builder => {\n    // Handle the result of the fetchDailyOrders action\n    builder.addCase(fetchDailyOrders.pending, state => {\n      state.status = 'loading';\n    });\n    builder.addCase(fetchDailyOrders.fulfilled, (state, action) => {\n      console.log(action);\n      state.status = 'succeeded';\n      state.data = action.payload;\n    });\n    builder.addCase(fetchDailyOrders.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {} = dailyOrdersSlice.actions;\nexport default dailyOrdersSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchDailyOrders","response","fetch","data","json","dailyOrdersSlice","name","initialState","status","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","console","log","payload","rejected","message","actions","reducer"],"sources":["C:/Users/victor.yanez/Projects/ASN/front-end/src/app/features/orders/dailyOrdersslice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const fetchDailyOrders = createAsyncThunk('dailyOrders/fetchData', async () => {\r\n    const response = await fetch('http://localhost:3010/dailyorders');\r\n    const data = await response.json();\r\n    return data;\r\n  });\r\n\r\nexport const dailyOrdersSlice = createSlice({\r\n    name: 'dailyOrders',\r\n    initialState: {\r\n      data: 0, // This can be an array or an object depending on your API response structure\r\n      status: 'idle', // 'idle', 'loading', 'succeeded', 'failed'\r\n      error: null,\r\n    },\r\n    reducers: {\r\n      // You can add additional reducers here if needed\r\n    },\r\n    extraReducers: (builder) => {\r\n      // Handle the result of the fetchDailyOrders action\r\n      builder.addCase(fetchDailyOrders.pending, (state) => {\r\n        state.status = 'loading';\r\n      });\r\n      builder.addCase(fetchDailyOrders.fulfilled, (state, action) => {\r\n        console.log(action);\r\n        state.status = 'succeeded';\r\n        state.data = action.payload;\r\n      });\r\n      builder.addCase(fetchDailyOrders.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n      });\r\n    },\r\n  });\r\n  \r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { } = dailyOrdersSlice.actions\r\n\r\nexport default dailyOrdersSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,OAAO,MAAMC,gBAAgB,GAAGD,gBAAgB,CAAC,uBAAuB,EAAE,YAAY;EAClF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;EACjE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACb,CAAC,CAAC;AAEJ,OAAO,MAAME,gBAAgB,GAAGP,WAAW,CAAC;EACxCQ,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAE;IACZJ,IAAI,EAAE,CAAC;IAAE;IACTK,MAAM,EAAE,MAAM;IAAE;IAChBC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACR;EAAA,CACD;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1B;IACAA,OAAO,CAACC,OAAO,CAACb,gBAAgB,CAACc,OAAO,EAAGC,KAAK,IAAK;MACnDA,KAAK,CAACP,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC;IACFI,OAAO,CAACC,OAAO,CAACb,gBAAgB,CAACgB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC7DC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MACnBF,KAAK,CAACP,MAAM,GAAG,WAAW;MAC1BO,KAAK,CAACZ,IAAI,GAAGc,MAAM,CAACG,OAAO;IAC7B,CAAC,CAAC;IACFR,OAAO,CAACC,OAAO,CAACb,gBAAgB,CAACqB,QAAQ,EAAE,CAACN,KAAK,EAAEE,MAAM,KAAK;MAC5DF,KAAK,CAACP,MAAM,GAAG,QAAQ;MACvBO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACR,KAAK,CAACa,OAAO;IACpC,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AAGJ;AACA,OAAO,MAAM,CAAE,CAAC,GAAGjB,gBAAgB,CAACkB,OAAO;AAE3C,eAAelB,gBAAgB,CAACmB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}