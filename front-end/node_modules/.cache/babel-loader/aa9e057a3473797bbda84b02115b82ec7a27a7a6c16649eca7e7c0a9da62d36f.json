{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nexport const fetchDailyOrders = createAsyncThunk('dailyOrders/fetchData', async () => {\n  const response = await fetch('http://localhost:3010/dailyorders');\n  const data = await response.json();\n  return data;\n});\nexport const dailyOrdersSlice = createSlice({\n  name: 'dailyOrders',\n  initialState: {\n    data: null,\n    status: 'idle',\n    error: null\n  },\n  reducers: {\n    // You can add additional reducers here if needed\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchDailyOrders.pending, state => {\n      state.status = 'loading';\n    });\n    builder.addCase(fetchDailyOrders.fulfilled, (state, action) => {\n      console.log(action);\n      state.status = 'succeeded';\n      state.data = action.payload;\n    });\n    builder.addCase(fetchDailyOrders.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport default dailyOrdersSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchDailyOrders","response","fetch","data","json","dailyOrdersSlice","name","initialState","status","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","console","log","payload","rejected","message","reducer"],"sources":["C:/Users/victor.yanez/Projects/ASN/front-end/src/app/features/orders/dailyOrdersslice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const fetchDailyOrders = createAsyncThunk('dailyOrders/fetchData', async () => {\r\n    const response = await fetch('http://localhost:3010/dailyorders');\r\n    const data = await response.json();\r\n    return data;\r\n});\r\n\r\nexport const dailyOrdersSlice = createSlice({\r\n    name: 'dailyOrders',\r\n    initialState: {\r\n        data: null,\r\n        status: 'idle',\r\n        error: null,\r\n    },\r\n    reducers: {\r\n        // You can add additional reducers here if needed\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchDailyOrders.pending, (state) => {\r\n            state.status = 'loading';\r\n        });\r\n        builder.addCase(fetchDailyOrders.fulfilled, (state, action) => {\r\n            console.log(action);\r\n            state.status = 'succeeded';\r\n            state.data = action.payload;\r\n        });\r\n        builder.addCase(fetchDailyOrders.rejected, (state, action) => {\r\n            state.status = 'failed';\r\n            state.error = action.error.message;\r\n        });\r\n    },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport default dailyOrdersSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,OAAO,MAAMC,gBAAgB,GAAGD,gBAAgB,CAAC,uBAAuB,EAAE,YAAY;EAClF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;EACjE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACf,CAAC,CAAC;AAEF,OAAO,MAAME,gBAAgB,GAAGP,WAAW,CAAC;EACxCQ,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAE;IACVJ,IAAI,EAAE,IAAI;IACVK,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE;IACN;EAAA,CACH;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CAACC,OAAO,CAACb,gBAAgB,CAACc,OAAO,EAAGC,KAAK,IAAK;MACjDA,KAAK,CAACP,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC;IACFI,OAAO,CAACC,OAAO,CAACb,gBAAgB,CAACgB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC3DC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MACnBF,KAAK,CAACP,MAAM,GAAG,WAAW;MAC1BO,KAAK,CAACZ,IAAI,GAAGc,MAAM,CAACG,OAAO;IAC/B,CAAC,CAAC;IACFR,OAAO,CAACC,OAAO,CAACb,gBAAgB,CAACqB,QAAQ,EAAE,CAACN,KAAK,EAAEE,MAAM,KAAK;MAC1DF,KAAK,CAACP,MAAM,GAAG,QAAQ;MACvBO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACR,KAAK,CAACa,OAAO;IACtC,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;;AAEF;AACA,eAAejB,gBAAgB,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}