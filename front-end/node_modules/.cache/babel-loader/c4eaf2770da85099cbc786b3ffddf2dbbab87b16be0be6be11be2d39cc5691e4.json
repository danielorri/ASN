{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victor.yanez\\\\Projects\\\\ASN\\\\front-end\\\\src\\\\components\\\\dailyOrders\\\\dailyOrders.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchDailyOrders } from '../../app/features/orders/dailyOrdersAsyncthunk';\nimport AlwaysOpenAcordeon from './dailyAcordeon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DailyOrders = () => {\n  _s();\n  const dispatch = useDispatch();\n  const orders = useSelector(state => state.dailyOrders.data);\n  const status = useSelector(state => state.dailyOrders.status);\n  const error = useSelector(state => state.dailyOrders.error);\n  const [selectedDate, setSelectedDate] = useState(getTodayDate());\n  const [editableOrders, setEditableOrders] = useState(orders);\n  useEffect(() => {\n    // Dispatch the fetchDailyOrders action with the selected date\n    dispatch(fetchDailyOrders(selectedDate));\n  }, [dispatch, selectedDate]);\n\n  // Function to get today's date in the format 'YYYY-MM-DD'\n  function getTodayDate() {\n    const today = new Date();\n    const year = today.getFullYear();\n    const month = String(today.getMonth() + 1).padStart(2, '0');\n    const day = String(today.getDate()).padStart(2, '0');\n    return `${year}/${month}/${day}`;\n  }\n\n  // Handle date change\n  const handleDateChange = event => {\n    setSelectedDate(event.target.value);\n  };\n\n  // Handle editing of fields\n  const handleEditField = (key, field, value) => {\n    setEditableOrders({\n      ...editableValues,\n      [key]: {\n        ...editableValues[key],\n        [field]: value\n      }\n    });\n  };\n\n  // Render loading state\n  if (status === 'loading') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render error state\n  if (status === 'failed') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n  const groupedOrders = {};\n  if (orders) {\n    editableOrders.forEach(order => {\n      const key = `${order.CardCode}-${order.ShipToCode}-${order.U_SIF_PO_Sample || 'N'}`;\n      if (!groupedOrders[key]) {\n        groupedOrders[key] = [];\n      }\n      groupedOrders[key].push(order);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-around\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center m-3\",\n        children: \"Daily Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"datePicker\",\n          className: \"me-2 fw-bold\",\n          children: \"Date: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"datePicker\",\n          value: selectedDate,\n          onChange: handleDateChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), orders && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.keys(groupedOrders).map(groupKey => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '90%',\n          margin: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(AlwaysOpenAcordeon, {\n          onEditField: handleEditField,\n          groupedOrders: groupedOrders[groupKey]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)\n      }, groupKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(DailyOrders, \"FIYwC9np/Cgq8KeSOqh/YS19sEw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = DailyOrders;\nexport default DailyOrders;\nvar _c;\n$RefreshReg$(_c, \"DailyOrders\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","fetchDailyOrders","AlwaysOpenAcordeon","jsxDEV","_jsxDEV","DailyOrders","_s","dispatch","orders","state","dailyOrders","data","status","error","selectedDate","setSelectedDate","getTodayDate","editableOrders","setEditableOrders","today","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","handleDateChange","event","target","value","handleEditField","key","field","editableValues","children","fileName","_jsxFileName","lineNumber","columnNumber","groupedOrders","forEach","order","CardCode","ShipToCode","U_SIF_PO_Sample","push","className","htmlFor","type","id","onChange","Object","keys","map","groupKey","style","width","margin","onEditField","_c","$RefreshReg$"],"sources":["C:/Users/victor.yanez/Projects/ASN/front-end/src/components/dailyOrders/dailyOrders.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchDailyOrders } from '../../app/features/orders/dailyOrdersAsyncthunk';\r\nimport AlwaysOpenAcordeon from './dailyAcordeon';\r\n\r\nconst DailyOrders = () => {\r\n  const dispatch = useDispatch();\r\n  const orders = useSelector((state) => state.dailyOrders.data);\r\n  const status = useSelector((state) => state.dailyOrders.status);\r\n  const error = useSelector((state) => state.dailyOrders.error);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(getTodayDate());\r\n  const [editableOrders, setEditableOrders] = useState(orders);\r\n\r\n  useEffect(() => {\r\n    // Dispatch the fetchDailyOrders action with the selected date\r\n    dispatch(fetchDailyOrders(selectedDate));\r\n  }, [dispatch, selectedDate]);\r\n\r\n  // Function to get today's date in the format 'YYYY-MM-DD'\r\n  function getTodayDate() {\r\n    const today = new Date();\r\n    const year = today.getFullYear();\r\n    const month = String(today.getMonth() + 1).padStart(2, '0');\r\n    const day = String(today.getDate()).padStart(2, '0');\r\n    return `${year}/${month}/${day}`;\r\n  }\r\n\r\n  // Handle date change\r\n  const handleDateChange = (event) => {\r\n    setSelectedDate(event.target.value);\r\n  };\r\n\r\n    // Handle editing of fields\r\n  const handleEditField = (key, field, value) => {\r\n    setEditableOrders({\r\n      ...editableValues,\r\n      [key]: {\r\n        ...editableValues[key],\r\n        [field]: value,\r\n      },\r\n    });\r\n  };\r\n\r\n  // Render loading state\r\n  if (status === 'loading') {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  // Render error state\r\n  if (status === 'failed') {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  const groupedOrders = {};\r\n  if (orders) {\r\n    editableOrders.forEach((order) => {\r\n      const key = `${order.CardCode}-${order.ShipToCode}-${order.U_SIF_PO_Sample || 'N'}`;\r\n      if (!groupedOrders[key]) {\r\n        groupedOrders[key] = [];\r\n      }\r\n      groupedOrders[key].push(order);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <div className='d-flex justify-content-around'>\r\n            <h1 className='text-center m-3'>Daily Orders</h1>\r\n\r\n            {/* Date Picker */}\r\n            <div className=\"text-center mb-3\">\r\n            <label htmlFor=\"datePicker\" className='me-2 fw-bold'>Date: </label>\r\n            <input\r\n                type=\"date\"\r\n                id=\"datePicker\"\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n            />\r\n            </div>\r\n        </div>\r\n\r\n      {orders && (\r\n        <div>\r\n          {Object.keys(groupedOrders).map((groupKey) => (\r\n            <div key={groupKey} style={{ width: '90%', margin: 'auto' }}>\r\n              <AlwaysOpenAcordeon onEditField={handleEditField} groupedOrders={groupedOrders[groupKey]} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DailyOrders;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}