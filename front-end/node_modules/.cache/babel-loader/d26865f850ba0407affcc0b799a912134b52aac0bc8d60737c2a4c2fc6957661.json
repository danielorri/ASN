{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victor.yanez\\\\Projects\\\\Robot\\\\ASN\\\\front-end\\\\src\\\\components\\\\pdfHandler\\\\pdfHandler.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PdfHandler() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleConvertPdf = () => {\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      console.log(selectedFile);\n      //   fetch('/convert-pdf', {\n      //     method: 'POST',\n      //     body: formData,\n      //   })\n      //   .then(response => response.json())\n      //   .then(data => {\n      //     console.log('Success:', data);\n      //   })\n      //   .catch(error => {\n      //     console.error('Error:', error);\n      //   });\n    }\n  };\n  const handleSplitPdf = () => {\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      fetch('/split-pdf', {\n        method: 'POST',\n        body: formData\n      }).then(response => response.json()).then(data => {\n        console.log('Success:', data);\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConvertPdf,\n      children: \"Convert PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSplitPdf,\n      children: \"Split PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(PdfHandler, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = PdfHandler;\nexport default PdfHandler;\nvar _c;\n$RefreshReg$(_c, \"PdfHandler\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PdfHandler","_s","selectedFile","setSelectedFile","handleFileChange","event","target","files","handleConvertPdf","formData","FormData","append","console","log","handleSplitPdf","fetch","method","body","then","response","json","data","catch","error","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/victor.yanez/Projects/Robot/ASN/front-end/src/components/pdfHandler/pdfHandler.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction PdfHandler() {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleConvertPdf = () => {\r\n    if (selectedFile) {\r\n      const formData = new FormData();\r\n      formData.append('file', selectedFile);\r\n console.log(selectedFile);\r\n    //   fetch('/convert-pdf', {\r\n    //     method: 'POST',\r\n    //     body: formData,\r\n    //   })\r\n    //   .then(response => response.json())\r\n    //   .then(data => {\r\n    //     console.log('Success:', data);\r\n    //   })\r\n    //   .catch(error => {\r\n    //     console.error('Error:', error);\r\n    //   });\r\n    }\r\n  };\r\n\r\n  const handleSplitPdf = () => {\r\n    if (selectedFile) {\r\n      const formData = new FormData();\r\n      formData.append('file', selectedFile);\r\n\r\n      fetch('/split-pdf', {\r\n        method: 'POST',\r\n        body: formData,\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log('Success:', data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error:', error);\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button onClick={handleConvertPdf}>Convert PDF</button>\r\n      <button onClick={handleSplitPdf}>Split PDF</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PdfHandler;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMO,gBAAgB,GAAIC,KAAK,IAAK;IAClCF,eAAe,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIN,YAAY,EAAE;MAChB,MAAMO,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAET,YAAY,CAAC;MAC1CU,OAAO,CAACC,GAAG,CAACX,YAAY,CAAC;MACtB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;EACF,CAAC;EAED,MAAMY,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIZ,YAAY,EAAE;MAChB,MAAMO,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAET,YAAY,CAAC;MAErCa,KAAK,CAAC,YAAY,EAAE;QAClBC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAER;MACR,CAAC,CAAC,CACDS,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACZT,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEQ,IAAI,CAAC;MAC/B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACdX,OAAO,CAACW,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACExB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAO0B,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEtB;IAAiB;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjD/B,OAAA;MAAQgC,OAAO,EAAEvB,gBAAiB;MAAAgB,QAAA,EAAC;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvD/B,OAAA;MAAQgC,OAAO,EAAEjB,cAAe;MAAAU,QAAA,EAAC;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV;AAAC7B,EAAA,CApDQD,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AAsDnB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}