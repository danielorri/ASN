{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victor.yanez\\\\Projects\\\\Robot\\\\ASN\\\\front-end\\\\src\\\\components\\\\certificatesOfComplience\\\\certificatesOfComplience.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCertificates } from '../../app/features/certicatesOfComplience/certificatesAsyncThunk';\nimport jsPDF from 'jspdf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CertificateOfCompliance = () => {\n  _s();\n  var _certificatesData$sel, _certificatesData$sel2, _certificatesData$sel3, _certificatesData$sel4, _certificatesData$sel5, _certificatesData$sel6;\n  const dispatch = useDispatch();\n  const certificatesData = useSelector(state => state.certificates.data);\n  const [inputSoNumber, setInputSoNumber] = useState('');\n  const [selectedCertificateIndex, setSelectedCertificateIndex] = useState(0);\n  const handlePrintPDF = certificate => {\n    const pdf = new jsPDF();\n    pdf.text(`SO#: ${certificate.soNumber}`, 10, 10);\n    // Add other details to the PDF as needed\n    pdf.save(`certificate-of-compliance-${certificate.soNumber}.pdf`);\n  };\n  const handleDispatchFetch = () => {\n    dispatch(fetchCertificates(selectedCertificateIndex)); // Update with your appropriate argument\n  };\n  if (!certificatesData || certificatesData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter SO Number\",\n        value: inputSoNumber,\n        onChange: value => {\n          setSelectedCertificateIndex(value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDispatchFetch,\n        children: \"Fetch Certificates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter SO Number\",\n      value: inputSoNumber,\n      onChange: value => {\n        setSelectedCertificateIndex(value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDispatchFetch,\n      children: \"Fetch Certificates\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"pdf-content\",\n      children: certificatesData.map((certificate, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px',\n          border: '1px solid #000',\n          padding: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Company Name: Shamrock International\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"SO#: \", certificate.soNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePrintPDF(certificate),\n          children: \"Print PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Details for Selected Certificate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), selectedCertificateIndex !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid #000',\n          padding: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Company Name: Shamrock International\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"SO#: \", (_certificatesData$sel = certificatesData[selectedCertificateIndex]) === null || _certificatesData$sel === void 0 ? void 0 : _certificatesData$sel.soNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Invoice No: \", (_certificatesData$sel2 = certificatesData[selectedCertificateIndex]) === null || _certificatesData$sel2 === void 0 ? void 0 : _certificatesData$sel2.invoiceNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Pack Slip No: \", (_certificatesData$sel3 = certificatesData[selectedCertificateIndex]) === null || _certificatesData$sel3 === void 0 ? void 0 : _certificatesData$sel3.packSlipNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Customer: \", (_certificatesData$sel4 = certificatesData[selectedCertificateIndex]) === null || _certificatesData$sel4 === void 0 ? void 0 : _certificatesData$sel4.customer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Final Audit Date: \", (_certificatesData$sel5 = certificatesData[selectedCertificateIndex]) === null || _certificatesData$sel5 === void 0 ? void 0 : _certificatesData$sel5.finalAuditDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Country of Origin: \", (_certificatesData$sel6 = certificatesData[selectedCertificateIndex]) === null || _certificatesData$sel6 === void 0 ? void 0 : _certificatesData$sel6.countryOfOrigin]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(CertificateOfCompliance, \"OfZsRlQc65Uj9JSidmyPKhB2Zik=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = CertificateOfCompliance;\nexport default CertificateOfCompliance;\nvar _c;\n$RefreshReg$(_c, \"CertificateOfCompliance\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","fetchCertificates","jsPDF","jsxDEV","_jsxDEV","CertificateOfCompliance","_s","_certificatesData$sel","_certificatesData$sel2","_certificatesData$sel3","_certificatesData$sel4","_certificatesData$sel5","_certificatesData$sel6","dispatch","certificatesData","state","certificates","data","inputSoNumber","setInputSoNumber","selectedCertificateIndex","setSelectedCertificateIndex","handlePrintPDF","certificate","pdf","text","soNumber","save","handleDispatchFetch","length","children","type","placeholder","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","map","index","style","marginBottom","border","padding","invoiceNumber","packSlipNumber","customer","finalAuditDate","countryOfOrigin","_c","$RefreshReg$"],"sources":["C:/Users/victor.yanez/Projects/Robot/ASN/front-end/src/components/certificatesOfComplience/certificatesOfComplience.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchCertificates } from '../../app/features/certicatesOfComplience/certificatesAsyncThunk';\r\nimport jsPDF from 'jspdf';\r\n\r\nconst CertificateOfCompliance = () => {\r\n  const dispatch = useDispatch();\r\n  const certificatesData = useSelector((state) => state.certificates.data);\r\n  const [inputSoNumber, setInputSoNumber] = useState('');\r\n  const [selectedCertificateIndex, setSelectedCertificateIndex] = useState(0);\r\n\r\n  const handlePrintPDF = (certificate) => {\r\n    const pdf = new jsPDF();\r\n    pdf.text(`SO#: ${certificate.soNumber}`, 10, 10);\r\n    // Add other details to the PDF as needed\r\n    pdf.save(`certificate-of-compliance-${certificate.soNumber}.pdf`);\r\n  };\r\n\r\n  const handleDispatchFetch = () => {\r\n    dispatch(fetchCertificates(selectedCertificateIndex)); // Update with your appropriate argument\r\n  };\r\n\r\n  if (!certificatesData || certificatesData.length === 0) {\r\n    return <div>\r\n        <input\r\n        type=\"text\"\r\n        placeholder=\"Enter SO Number\"\r\n        value={inputSoNumber}\r\n        onChange={(value) =>{ setSelectedCertificateIndex(value)}}\r\n      />\r\n      <button onClick={handleDispatchFetch}>Fetch Certificates</button>\r\n    </div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter SO Number\"\r\n        value={inputSoNumber}\r\n        onChange={(value) =>{ setSelectedCertificateIndex(value)}}\r\n      />\r\n      <button onClick={handleDispatchFetch}>Fetch Certificates</button>\r\n\r\n      <div id=\"pdf-content\">\r\n        {certificatesData.map((certificate, index) => (\r\n          <div key={index} style={{ marginBottom: '20px', border: '1px solid #000', padding: '20px' }}>\r\n            <h2>Company Name: Shamrock International</h2>\r\n            {/* ... (Include other details) */}\r\n            <p>SO#: {certificate.soNumber}</p>\r\n            {/* ... (Include other details) */}\r\n            <button onClick={() => handlePrintPDF(certificate)}>Print PDF</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div>\r\n        <h2>Details for Selected Certificate</h2>\r\n        {selectedCertificateIndex !== null && (\r\n          <div style={{ border: '1px solid #000', padding: '20px' }}>\r\n            <h2>Company Name: Shamrock International</h2>\r\n            {/* ... (Include other details) */}\r\n            <p>SO#: {certificatesData[selectedCertificateIndex]?.soNumber}</p>\r\n            {/* ... (Include other details) */}\r\n            <p>Invoice No: {certificatesData[selectedCertificateIndex]?.invoiceNumber}</p>\r\n            <p>Pack Slip No: {certificatesData[selectedCertificateIndex]?.packSlipNumber}</p>\r\n            <p>Customer: {certificatesData[selectedCertificateIndex]?.customer}</p>\r\n            {/* ... (Include other details) */}\r\n            <p>Final Audit Date: {certificatesData[selectedCertificateIndex]?.finalAuditDate}</p>\r\n            <p>Country of Origin: {certificatesData[selectedCertificateIndex]?.countryOfOrigin}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CertificateOfCompliance;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}